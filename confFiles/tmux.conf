
#   __  __         _____                     
#  |  \/  |_   _  |_   _| __ ___  _   ___  __
#  | |\/| | | | |   | || '_ ` _ \| | | \ \/ /
#  | |  | | |_| |   | || | | | | | |_| |>  < 
#  |_|  |_|\__, |   |_||_| |_| |_|\__,_/_/\_\
#          |___/                             


#   _   _      _       
#  | | | | ___| |_ __  
#  | |_| |/ _ \ | '_ \ 
#  |  _  |  __/ | |_) |
#  |_| |_|\___|_| .__/ 
#               |_|    
# 
#         ┌ 0~9      : change /window/
#         ├ )~(      : move /pane/ to other /window/
#         ├ hjkl     : change /pane/
#  <Alt-> ┼ HJKL     : adjust /pane/
#         ├ pn       : change /window/
#         ├ f        : maximize /pane/
#         ├ v        : enter vi-mode
#         └ <Space>  : change layout
#  
#           ┌ 0~9      : change /pane/
#           ├ )~(      : None
#           ├ hjkl     : new a /pane/ (split /window/)
#           ├ HJKL     : None
#           ├ p        : paste
#  <Prefix> ┼ w        : view tmux-tree
#           ├ sv       : fetch /pane/
#           ├ v        : fetch /pane/
#           ├ b        : view buffer contents
#           ├ <|>      : swap /pane/
#           └ <Ctrl-c> : new a /session/
#  <Prefix>? : show the keys' information which hasn't been defined

#    ____             __ _       
#   / ___|___  _ __  / _(_) __ _ 
#  | |   / _ \| '_ \| |_| |/ _` |
#  | |__| (_) | | | |  _| | (_| |
#   \____\___/|_| |_|_| |_|\__, |
#                          |___/ 

# # cat << EOF > /dev/null
# 
# # --- general
# #set-option default-path "$PWD"
# 
# setw -g xterm-keys on
# set -s escape-time 0
# set -sg repeat-time 300
# set -s focus-events on
# set -g mouse on
# set -sg exit-empty on
# 
# set -q -g status-utf8 on
# setw -q -g utf8 on
# 
# set -g visual-activity off
# setw -g monitor-activity off
# setw -g monitor-bell off
# 
# set -g history-limit 10000
# 
# set-hook -g pane-focus-in "run -b 'bash ~/.config/tmux/fzf_panes.tmux update_mru_pane_ids'"
# bind -n M-w run -b 'bash ~/.config/tmux/fzf_panes.tmux new_window'
# 
# # reload configuration
# bind r source-file ~/.conf/tmux/tmux.conf \; display '~/.conf/tmux/tmux.conf sourced'
# 
# set -ga update-environment '\
# DISPLAY DBUS_SESSION_BUS_ADDRESS \
# QT_IM_MODULE QT_QPA_PLATFORMTHEME \
# SESSION_MANAGER \
# XDG_CONFIG_HOME XDG_CACHE_HOME XDG_DATA_HOME\
# XDG_MENU_PREFIX XDG_RUNTIME_DIR XDG_SESSION_CLASS \
# XDG_SESSION_DESKTOP XDG_SESSION_TYPE XDG_CURRENT_DESKTOP \
# XMODIFIERS \
# FZF_DEFAULT_OPTS \
# '
# set-hook -g client-attached 'run -b "cut -c3- ~/.tmux.conf | sh -s update_env_event"'

# ---
# --- prefix
# ---
unbind C-b
set -g prefix 'C-a'


# ---
# --- display
# ---
set -g base-index 0 # count window from 0
setw -g pane-base-index 0 # count pane from 0

setw -g automatic-rename on
set -g renumber-windows on

set -g set-titles on

set -g display-panes-time 2000
set -g display-time 2000

set -g status-interval 1


# ---
# --- navigation
# ---

# unbind some keys (<Prefix><x>)
unbind n
unbind p
unbind 0
unbind 1
unbind 2
unbind 3
unbind 4
unbind 5
unbind 6
unbind 7
unbind 8
unbind 9

# <Prefix><Ctrl-c> : create a new session
bind C-c new-session

# window management
# <Alt-o> : open a new window
bind -n M-o new-window -c "#{pane_current_path}"
# <Alt-O> : open a new window with current pane
bind -n M-O break-pane
# <Alt-Q> : quit current pane (same as <Ctrl-d> ?)
bind -n M-Q kill-pane

# <Prefix>hjkl : split current window (create a new pane)
bind k split-window -vb -c "#{pane_current_path}"
bind j split-window -v -c "#{pane_current_path}"
bind h split-window -hb -c "#{pane_current_path}"
bind l split-window -h -c "#{pane_current_path}"

# <Alt-p n> : change the window
bind -n M-p previous-window
bind -n M-n next-window

# <Alt-(0~9)> : change the window BY NUMBER
bind -n M-0 select-window -t 0
bind -n M-1 select-window -t 1
bind -n M-2 select-window -t 2
bind -n M-3 select-window -t 3
bind -n M-4 select-window -t 4
bind -n M-5 select-window -t 5
bind -n M-6 select-window -t 6
bind -n M-7 select-window -t 7
bind -n M-8 select-window -t 8
bind -n M-9 select-window -t 9

# <Alt-Shift-(0~9)> : move current pane to the window BY NUMBER
bind -n M-) join-pane -t :0
bind -n M-! join-pane -t :1
bind -n M-@ join-pane -t :2
bind -n 'M-#' join-pane -t :3
bind -n 'M-$' join-pane -t :4
bind -n M-% join-pane -t :5
bind -n M-^ join-pane -t :6
bind -n M-& join-pane -t :7
bind -n M-* join-pane -t :8
bind -n M-( join-pane -t :9

# <Alt-f> : maximize current pane
bind -n M-f resize-pane -Z

# <Alt-h j k l>: change the pane
bind -n M-k select-pane -U
bind -n M-j select-pane -D
bind -n M-h select-pane -L
bind -n M-l select-pane -R

# <Alt-H J K L> : resize the pane
bind -n M-K resize-pane -U 3
bind -n M-J resize-pane -D 3
bind -n M-H resize-pane -L 3
bind -n M-L resize-pane -R 3

# <Prefix>(0~9) : change the pane BY NUMBER (you can press the key 'q' between the <Prefix> and 0~9 to view the number of current window's panes)
bind 0 select-pane -t:.0
bind 1 select-pane -t:.1
bind 2 select-pane -t:.2
bind 3 select-pane -t:.3
bind 4 select-pane -t:.4
bind 5 select-pane -t:.5
bind 6 select-pane -t:.6
bind 7 select-pane -t:.7
bind 8 select-pane -t:.8
bind 9 select-pane -t:.9

# <Prefix>'>' '|' '<' : swap the pane
bind > swap-pane -D
bind < swap-pane -U
bind | swap-pane

# <Alt><Space> : change current window's pane-layout
bind -n M-Space next-layout

# ---
# --- Tmux Tree (you can use jk to move in the tmux-tree)
# ---
# <Prefix>w : just move to a window/pane BY TREE
bind w choose-tree -Z
# <Prefix>v : fetch a pane to current window in a vertical manner
bind v choose-tree 'move-pane -v -s "%%"'
# <Prefix>s : fetch a pane to current window in a horizontal manner
bind s choose-tree 'move-pane -h -s "%%"'

# ???
set -g status-keys emacs
set -g mode-keys vi


# ---
# --- vi mode (to copy some content)
# ---
bind -n M-v copy-mode # <Alt-v> : enter the vi mode
bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi C-v send-keys -X rectangle-toggle
# bind -T copy-mode-vi h send-keys -X cursor-left
# bind -T copy-mode-vi j send-keys -X cursor-down
# bind -T copy-mode-vi k send-keys -X cursor-up
# bind -T copy-mode-vi l send-keys -X cursor-right
bind -T copy-mode-vi K send-keys -N 5 -X cursor-up
bind -T copy-mode-vi J send-keys -N 5 -X cursor-down
bind -T copy-mode-vi H send-keys -X start-of-line
bind -T copy-mode-vi L send-keys -X end-of-line
bind -T copy-mode-vi Y send-keys -X copy-end-of-line
bind -T copy-mode-vi y send-keys -X copy-selection-and-cancel
bind -T copy-mode-vi = send-keys -X search-again
bind -T copy-mode-vi = send-keys -X search-reverse
bind b list-buffers # <Prefix>b : view the buffer contents
bind p paste-buffer # <Prefix>p : paste the newest copy content

# --- toggle_syn_input
# setw synchronize-panes off
# bind C-g if-shell '[[ $(tmux showw synchronize-panes | cut -d\  -f2) == "on" ]]' \
'setw synchronize-panes off; set -g pane-border-style fg=magenta' \
'setw synchronize-panes on; set -g pane-border-style fg=red'

# --- toggle_status
bind s if-shell '[[ $(tmux show -g status | cut -d\  -f2) == "on" ]]' \
'set -g status off' \
'set -g status on'


#   _____ _                         
#  |_   _| |__   ___ _ __ ___   ___ 
#    | | | '_ \ / _ \ '_ ` _ \ / _ \
#    | | | | | |  __/ | | | | |  __/
#    |_| |_| |_|\___|_| |_| |_|\___|
                                 
# set -g status off

# panes
set -g pane-border-style fg=#c0c0c0
set -g pane-active-border-style fg=#00c000
# setw -g pane-border-status bottom
setw -g pane-border-status off

# windows
set -g status-justify 'centre'
set -g status-left-length 50
set -g status-right-length 70
setw -g window-status-separator ''

# default statusbar colors
set -g status-bg black

setw -g window-status-format '#[fg=#00c0c0] #I #W '
setw -g window-status-current-format '#[bg=#001010] #[fg=cyan,bold]#[bg=#102020]#I #W:#F#[bg=#001010] '
setw -g window-status-activity-style bg=black
setw -g window-status-bell-style bg=black

# set-option -g status-left "#(~/.config/tmux/tmux-powerline/powerline.sh left)"
# set-option -g status-right "#(~/.config/tmux/tmux-powerline/powerline.sh right)"
# set-option -g status-right "#(~/.config/tmux/rainbarf/rainbarf)"
# set-option -g status-left " #[fg=orange]#(whoami) #[fg=brightyellow]#(ifconfig wlan0 | grep 'inet ' | awk '{print $2}')"
set-option -g status-left " #[fg=orange]#(whoami)"
set-option -g status-right "#[fg=cyan,bold]%H:%M #[fg=brightblue]%m-%d #(~/.config/tmux/rainbarf.sh) "
# set-option -g status-right "#(~/.config/tmux/rainbarf/rainbarf) #[fg=magenta,bold] %H:%M %Y-%m-%d"

